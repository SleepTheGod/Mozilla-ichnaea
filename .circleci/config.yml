version: 2.1
jobs:
  build:
    docker:
      - image: cimg/base:stable-20.04
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    environment:
        DOCKER_BUILDKIT: 1  # Buildkit is not in Ubuntu 20.04 default, but getting ready
        BUILDKIT_PROGRESS: plain  # auto / tty is over-verbose in CircleCI

    steps:
        - checkout

        - run:
            name: Create version.json
            command: |
                # create a version.json per https://github.com/mozilla-services/Dockerflow/blob/master/docs/version_object.md
                printf '{"commit":"%s","version":"%s","source":"https://github.com/%s/%s","build":"%s"}\n' \
                "$CIRCLE_SHA1" \
                "$CIRCLE_TAG" \
                "$CIRCLE_PROJECT_USERNAME" \
                "$CIRCLE_PROJECT_REPONAME" \
                "$CIRCLE_BUILD_URL" > ./version.json

        - store_artifacts:
            path: ./version.json

        - run:
            # Ubuntu 20.04 default is 1.22.0, which doesn't support interpolation format used for the db service
            name: Install Docker Compose
            command: |
                set +x
                echo curl -L https://github.com/docker/compose/releases/download/1.27.4/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
                echo chmod +x /usr/local/bin/docker-compose

        - setup_remote_docker:
            version: 20.10.11

        - run:
            name: Get build info
            command: |
               export OUT_FILE="/tmp/build_info.txt"
               touch $OUT_FILE
               function log_info {
                 echo "*** $@ ***" | tee -a $OUT_FILE
                 "$@" | tee -a $OUT_FILE
               }
               log_info uname -v
               log_info docker info
               log_info which docker-compose
               log_info docker-compose --version

        - store_artifacts:
            path: /tmp/build_info.txt

        - run:
            name: Login to Dockerhub
            command: |
                if [ "${DOCKER_USER}" == "" ] || [ "${DOCKER_PASS}" == "" ]; then
                  echo "Skipping Login to Dockerhub, credentials not available."
                else
                  echo "${DOCKER_PASS}" | docker login -u="${DOCKER_USER}" --password-stdin
                fi

        - run:
            name: Build Docker images
            command: |
                make build

        - run:
            name: Run linting
            command: |
                docker run local/ichnaea_app shell ./docker/run_lint.sh

        - run:
            name: Run tests
            command: |
                make test

        - run:
            name: Check if pushing images to Dockerhub
            command: |
              if [ "${DOCKER_USER}" == "" ] || [ "${DOCKER_PASS}" == "" ]; then
                echo "Skipping Push to Dockerhub, credentials not available."
                circleci step halt
              fi
              if [ "${CIRCLE_BRANCH}" != "main" ] && [ -z "${CIRCLE_TAG}" ]; then
                echo "Skipping Push to Dockerhub, not main branch or a tag."
                circleci step halt
              fi

        - run:
            name: Push to Dockerhub
            command: |
              function retry {
                set +e
                local n=0
                local max=3
                while true; do
                "$@" && break || {
                  if [[ $n -lt $max ]]; then
                    ((n++))
                    echo "Command failed. Attempt $n/$max:"
                  else
                    echo "Failed after $n attempts."
                    exit 1
                  fi
                }
                done
                set -e
              }

              export DOCKER_TAG="${CIRCLE_SHA1}"
              if [ -n "${CIRCLE_TAG}" ]; then
                export DOCKER_TAG="${CIRCLE_TAG}"
              else
                export DOCKER_TAG="${CIRCLE_SHA1}"
              fi

              docker tag "local/ichnaea_app" "mozilla/location:${DOCKER_TAG}"
              retry docker push "mozilla/location:${DOCKER_TAG}"

              if [ "${CIRCLE_BRANCH}" == "main" ]; then
                docker tag "local/ichnaea_app" "mozilla/location:latest"
                retry docker push "mozilla/location:latest"
              fi

workflows:
  version: 2
  #
  # workflow jobs are _not_ run in tag builds by default, so we have to enable that.
  # see: https://circleci.com/docs/2.0/workflows/#executing-workflows-for-a-git-tag
  build-test-push:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
